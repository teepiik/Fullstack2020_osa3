{"version":3,"sources":["Components/Form.js","Components/PersonListing.js","Components/Filter.js","Services/personService.js","Components/Notification.js","Components/Error.js","App.js","index.js"],"names":["Form","props","onSubmit","addNewPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Person","key","name","person","number","onClick","event","deletePerson","id","PersonListing","personsToShow","persons","filter","includes","map","Filter","handleFilterChange","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","Error","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","error","setError","hook","personService","useEffect","target","preventDefault","personObject","window","confirm","updatable","find","setTimeout","catch","console","log","result","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9212e1a1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Form = (props) => {\r\n    \r\n    return (\r\n        <div>\r\n            <h2>Add new Person</h2>\r\n            <form onSubmit={props.addNewPerson}>\r\n                <div>\r\n                    name: <input value={props.newName} onChange={props.handleNameChange}/>\r\n                </div>\r\n                <div>\r\n                    number: <input value={props.newNumber} onChange={props.handleNumberChange}/>\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form","import React from 'react'\r\n\r\nconst Person = (props) => {\r\n    return (\r\n        <li key={props.name}>\r\n            <p>Name: {props.person.name}</p>\r\n            <p>Number: {props.person.number}</p>\r\n            <button onClick={(event) => props.deletePerson(props.person.id)} >Delete</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nconst PersonListing = (props) => {\r\n    const personsToShow = props.persons.filter(person => person.name.includes(props.filter))\r\n\r\n    const showPersons = () => personsToShow.map(\r\n        person => <Person key={person.id} person={person} deletePerson={props.deletePerson}/>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <h2>Persons on phonebook</h2>\r\n            <ul>\r\n                {showPersons()}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonListing","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n            <h2>Search</h2>\r\n            <input value={props.filter} onChange={props.handleFilterChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst destroy = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, destroy }","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n    <div className=\"msg\">{message}</div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Error = ({message}) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n    <div className=\"error\">{message}</div>\r\n    )\r\n}\r\n\r\nexport default Error","import React, { useState, useEffect } from 'react'\nimport Form from './Components/Form'\nimport PersonListing from './Components/PersonListing'\nimport Filter from './Components/Filter'\nimport personService from './Services/personService'\nimport Notification from './Components/Notification'\nimport Error from './Components/Error'\nimport './app.css'\n\nconst App = () => {\n    const [ persons, setPersons ] = useState([''])\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ filter, setFilter ] = useState('')\n    const [ message, setMessage] = useState(null)\n    const [ error, setError] = useState(null)\n\n    const hook = () => {\n        personService\n            .getAll()\n            .then(persons => setPersons(persons))\n    }\n\n    useEffect(hook, []) // NOTE empty array means that effect is only activated on first render.\n  \n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilterChange = (event) => {\n        setFilter(event.target.value)\n    }\n\n    const addNewPerson = (event) => {\n        event.preventDefault()\n        const personObject = {\n            name: newName,\n            number: newNumber,\n        }\n\n        try {\n            const names = persons.map(person => person.name)\n            if(names.includes(newName)) {\n                const result = window.confirm('Phonebook already contains that person. Would you like to update that number?')\n                if(result) {\n                    const updatable = persons.find(person => person.name == newName)\n                    updatable.number = newNumber\n                    personService\n                        .update(updatable.id, updatable)\n                        .then(setMessage(`'${personObject.name}' was updated.`))\n                        setTimeout(() => {\n                            setMessage(null)\n                          }, 5000)\n                }\n            } else {\n                personService\n                    .create(personObject)\n                    .then(hook())\n                    .catch(error => {\n                        console.log(error.response.data)\n                        setMessage(`${error.response.data.error}`)\n                    })\n                if(message === null) {\n                    setMessage(`${personObject.name} was added.`)\n                }      \n                setTimeout(() => {\n                  setMessage(null)\n                }, 5000)\n            }\n            setNewName('')\n            setNewNumber('')\n\n        } catch(error) {\n            setError('Oops we did a doopsie')\n              setTimeout(() => {\n                setMessage(null)\n              }, 5000)\n        }  \n    }\n\n    const deletePerson = (id) => {\n        const result = window.confirm(\"Confirm delete\")\n        try {\n            if(result) {\n                personService.destroy(id)\n                    .then(setPersons(persons.filter(person => person.id !== id)))\n            }\n\n        } catch(error) {\n            setError('Error happened with delete.')\n              setTimeout(() => {\n                setMessage(null)\n              }, 5000)\n        }  \n    }\n\n    if(persons=='') {\n        return (\n            <div>Loading</div>\n        )\n    }\n\n    return (\n        <div>\n            <Notification message={message}/>\n            <Error message={error}/>\n            <Filter handleFilterChange={handleFilterChange} />\n            <Form newName={newName} newNumber={newNumber} handleNameChange={handleNameChange}\n            handleNumberChange={handleNumberChange} addNewPerson={addNewPerson}/> \n            <PersonListing persons={persons} filter={filter} deletePerson={deletePerson}/>\n        </div>\n    )\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}